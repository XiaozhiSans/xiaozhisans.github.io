[{"title":"最新LiteLoaderQQNT手动安装教程","date":"2024-11-02T06:42:00.000Z","url":"/posts/%E6%9C%80%E6%96%B0LiteLoaderQQNT%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/","tags":[["QQNT","/tags/QQNT/"],["LiteLoaderQQNT","/tags/LiteLoaderQQNT/"]],"categories":[["QQNT","/categories/QQNT/"],["LiteLoaderQQNT","/categories/QQNT/LiteLoaderQQNT/"],["教程","/categories/%E6%95%99%E7%A8%8B/"]],"content":"前言LiteLoaderQQNT(以下简称llqqnt)是 QQNT 的插件加载器, 它可以让QQNT客户端支持更多的功能。本教程将介绍如何手动安装 llqqnt 最新版本。若版本更新(安装方式有变动), 教程也会随之更新。 准备工作 QQNT 28060或更高版本 点我去下载 QQNT 官方版本(最新) llqqnt 1.2.2或更高版本 点我去 llqqnt 官方下载地址(最新, github) 点我直接下载 llqqnt 1.2.2(本站) QQNT 过检工具&#x2F;库 (仅 Windows 用户)点我去下载 QQNTFileVerifyPatch&#x2F;DLLHijackMethod (github) 点我直接下载 DLLHijackMethod 1.2.2 64位版 (本站) 你想安装的 llqqnt 插件 点我去 llqqnt 官网查看插件列表(保持更新, github pages) 开始安装 信息 本教程使用的示例为: 操作系统: Windows 10 64位 QQNT 版本: 9.9.16-28788(Win-x64) llqqnt 版本: 1.2.2 安装的 llqqnt 插件: llqqnt本体, MSpring Theme 安装并启动 QQNT, 检查版本号是否为 28060 或更高版本。 可见, 我的 QQNT 版本为 9.9.16-28788(64位) 解压 llqqnt 压缩包到你喜欢的位置(后文提及的”llqqnt 根目录”也是这个位置), 如D:\\LiteLoaderQQNT 可见, 我的 llqqnt 解压目录为 C:\\Program Files\\Tencent\\QQNT\\versions\\9.9.16-28788\\resources\\app\\node_modules\\LiteLoaderQQNT 提示 注意: 路径中不要出现中文, 否则可能会导致 llqqnt 无法正常运行。 危险 注意: 这很危险! 请不要学我把 llqqnt 放到 QQNT 的versions目录下! (除非你想制作 QQNT 便携版或者你知道你在做什么) 这样做可能会导致 QQNT 更新时 llqqnt 丢失, 需要重新安装。 修改 package.json 文件 提示 注意: 文件一般位于 &lt;QQNT 根目录&gt;/versions/&lt;你的 qqnt 版本号&gt;/resources/app/ 目录下(这也是后文提及的”当前目录”)。 提示 注意: 如果你不知道 QQNT 根目录在哪里, 可以 如上图所示, 我修改了 main 属性, 使其指向当前目录下的 init.js 文件。 在当前目录下创建 init.js 文件 在该文件中写入以下内容:如上图所示, 我创建了 init.js 文件, 并写入了 require 语句, 指向了 node_modules 目录下的 llqqnt。 提示 注意: 我这里直接使用了 &#39;LiteLoaderQQNT&#39; 字符串, 这是利用了 node.js 的特性, 能直接导入 node_modules 目录下的模块。 此时, 你已经完成了 llqqnt 的安装。 过检 QQNT 信息 注意: 仅 Windows 用户需要进行此步骤。 完成第4步后, 你已经完成了 llqqnt 的安装, 但启动 QQNT 时会出现文件损坏的提示。此时, 你需要使用过检工具&#x2F;库来修复 QQNT。这里我使用的是 DLLHijackMethod 1.2.2 64位版。使用方法非常简单, 直接解压到 QQNT 根目录并重命名为 dbghelp.dll 即可。 提示 注意: 如果你不知道 QQNT 根目录在哪里, 可以 提示 如果你想通过修补程序来过检可以 QQNTFileVerifyPatch（不推荐，麻烦可能被检测） 在 Release 下载 exe 文件，运行将弹出文件选择框，进入 QQNT 安装目录选择 QQ.exe 或 QQNT.dll 开始修补，每次更新都需要重新修补 至此, 你已经完成了 llqqnt 的安装, 并过检了 QQNT, 接下来, 你只需要启动 QQNT 并安装你想安装的 llqqnt 插件即可。 安装 llqqnt 插件除了直接点击图中的”选择文件”按钮外, 你还可以直接把插件解压到 llqqnt 根目录下的 plugins 目录下。如上图所示, 我的 llqqnt 插件目录为 C:\\Program Files\\Tencent\\QQNT\\versions\\9.9.16-28788\\resources\\app\\node_modules\\LiteLoaderQQNT\\plugins, 所以我把 MSpring Theme 插件解压到了该目录下。完成安装后, 你需要重启 QQNT 客户端。 提示 注意: llqqnt 插件的安装路径为 &lt;llqqnt 根目录&gt;/plugins 总结至此, 你已经学会了如何手动安装并使用 llqqnt 插件。 参考 安装 | LiteLoaderQQNT "},{"title":"解决局域网我的小电视导致设备管理器不断刷新","date":"2024-04-30T07:11:16.000Z","url":"/posts/%E8%A7%A3%E5%86%B3%E5%B1%80%E5%9F%9F%E7%BD%91%E6%88%91%E7%9A%84%E5%B0%8F%E7%94%B5%E8%A7%86%E5%AF%BC%E8%87%B4%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86%E5%99%A8%E4%B8%8D%E6%96%AD%E5%88%B7%E6%96%B0/","tags":[["我的小电视","/tags/%E6%88%91%E7%9A%84%E5%B0%8F%E7%94%B5%E8%A7%86/"],["设备管理器","/tags/%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86%E5%99%A8/"],["局域网设备","/tags/%E5%B1%80%E5%9F%9F%E7%BD%91%E8%AE%BE%E5%A4%87/"]],"categories":[["Windows","/categories/Windows/"]],"content":"起因今天打开设备管理器时发现一个叫做我的小电视的软件设备在不断刷新设备管理器 分析它这么不断刷新肯定会影响我的电脑性能啊,于是开始分析它这么做的原因: 从名字可以得出它是局域网内的智能电视设备上的app 既然是电视上的app那么就好说了: 一般电视app都会有投屏功能,而这个功能呢又会向局域网内不断发送数据包 以检测局域网内的其他设备是否支持投屏. 🥚是,windows它不知道啊,它会傻傻的不断接收这些数据包并作为软件设备安装 解决既然知道了问题的原因,那么就好解决了 网上的解决方案: 防火墙&#x2F;安全软件屏蔽局域网电视ip 禁用network connected devices auto setup服务 关闭网络发现 来源于网络 可以试试,也可以直接用我的解决方案 因为我很懒所以我并没有使用上述方案,而是使用了一个简单粗暴的方案: 按下 +I 键打开设置 ​ 点击设备,在其他设备里找到并点击我的小电视,删除即可 ​ 因为我已经删掉了就随便用了个设备做例子.当然你也可以删掉没用的设备,不过乱删出了问题我可不负责 (￣_,￣ ) 现在打开设备管理器,发现我的小电视已经消失,同时设备管理器不再不断刷新.问题解决. "},{"date":"2024-11-05T12:45:18.177Z","url":"/css/github-dark.min.css","categories":[["undefined",""]],"content":"pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}/*! Theme: GitHub Dark Description: Dark theme as seen on github.com Author: github.com Maintainer: @Hirse Updated: 2021-05-15 Outdated base version:  Current colors taken from GitHub's CSS */.hljs{color:#c9d1d9;background:#0d1117}.hljs-doctag,.hljs-keyword,.hljs-meta .hljs-keyword,.hljs-template-tag,.hljs-template-variable,.hljs-type,.hljs-variable.language_{color:#ff7b72}.hljs-title,.hljs-title.class_,.hljs-title.class_.inherited__,.hljs-title.function_{color:#d2a8ff}.hljs-attr,.hljs-attribute,.hljs-literal,.hljs-meta,.hljs-number,.hljs-operator,.hljs-selector-attr,.hljs-selector-class,.hljs-selector-id,.hljs-variable{color:#79c0ff}.hljs-meta .hljs-string,.hljs-regexp,.hljs-string{color:#a5d6ff}.hljs-built_in,.hljs-symbol{color:#ffa657}.hljs-code,.hljs-comment,.hljs-formula{color:#8b949e}.hljs-name,.hljs-quote,.hljs-selector-pseudo,.hljs-selector-tag{color:#7ee787}.hljs-subst{color:#c9d1d9}.hljs-section{color:#1f6feb;font-weight:700}.hljs-bullet{color:#f2cc60}.hljs-emphasis{color:#c9d1d9;font-style:italic}.hljs-strong{color:#c9d1d9;font-weight:700}.hljs-addition{color:#aff5b4;background-color:#033a16}.hljs-deletion{color:#ffdcd7;background-color:#67060c}"},{"date":"2024-11-05T12:45:18.177Z","url":"/css/main.css","categories":[["undefined",""]],"content":"@import url('../plugins/firacode/distr/fira_code.css'); /* fira code */ @import url('./tomorrow-night-bright.min.css'); /* hljs主题 */ [itemprop=\"articleBody\"] a { display: inline-flex; align-items: center; color: #4cf04c; transition: color 0.4s ease, text-decoration 0.4s ease; } [itemprop=\"articleBody\"] a:hover { color: #4cf04c80; text-decoration: underline; } [itemprop=\"articleBody\"] a[href^=\"http\"]::after { display: inline-block; content: ''; background: url('data:image/svg+xml;utf-8,') no-repeat; width: 0.8em; height: 0.8em; margin-left: 0.5em; text-decoration: none; } [itemprop=\"articleBody\"] a[class=\"headerlink\"]::before { content: '#' !important; } .kratos-cover .desc h2,.kratos-cover .desc span { color: #acacff; text-shadow: 4px 8px 12px #000; } #footer { /* 抬高底栏 以便为aplayer提供足够的空间 */ padding-bottom: 32px; } pre, code, pre span { font-family: 'Fira Code', 'Segoe UI Symbol', '黑体', monospace !important; font-variant-ligatures: normal; /* 启用连字特性 */ } pre:has(code:only-of-type) .caption span { font-family: '微软雅黑', 'Microsoft YaHei', sans-serif !important; } /* aplayer美化 */ .aplayer-info { color: #0ff !important; border-color: #1f1f1f !important; background-color: #333 !important; } .aplayer-miniswitcher { background-color: #222 !important; } .aplayer-list { color: #0ff !important; background-color: #000 !important; border-color: #1f1f1f !important; } .aplayer-list ol li { border-color: #1f1f1f !important; } .aplayer .aplayer-list ol li .aplayer-list-author { color: #ccc !important; } .aplayer-list-light { background-color: #ff1493 !important; } .aplayer .aplayer-list ol li:hover { background-color: #004055 !important; } .aplayer-list-index { color: #4cf04c !important; } .aplayer-lrc { text-shadow: 1px 1px 0px #fff !important; } .aplayer .aplayer-lrc p { color: #fff !important; font-size: 14px !important; font-weight: bold !important; } .aplayer .aplayer-lrc p.aplayer-lrc-current { color: #ff1493 !important; }"},{"date":"2024-11-05T12:45:18.177Z","url":"/css/tomorrow-night-bright.min.css","categories":[["undefined",""]],"content":"pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}.hljs-comment,.hljs-quote{color:#969896}.hljs-deletion,.hljs-name,.hljs-regexp,.hljs-selector-class,.hljs-selector-id,.hljs-tag,.hljs-template-variable,.hljs-variable{color:#d54e53}.hljs-built_in,.hljs-link,.hljs-literal,.hljs-meta,.hljs-number,.hljs-params,.hljs-type{color:#e78c45}.hljs-attribute{color:#e7c547}.hljs-addition,.hljs-bullet,.hljs-string,.hljs-symbol{color:#b9ca4a}.hljs-section,.hljs-title{color:#7aa6da}.hljs-keyword,.hljs-selector-tag{color:#c397d8}.hljs{background:#000;color:#eaeaea}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}"},{"title":"申请友链","date":"2024-11-01T16:00:00.000Z","url":"/friends/apply.html","categories":[["undefined",""]],"content":"♪(^∇^*) 欢迎申请友链，请在评论区留言，格式如下： ( •̀ ω •́ )✧ 如果可以的话，能不能挂上我的友链呀？ 本站信息 "},{"title":"友情链接","date":"2024-11-01T16:00:00.000Z","url":"/friends/index.html","categories":[["undefined",""]],"content":" (() => { const flist = [{\"title\":\"申请友链\",\"description\":\"我要上榜 ψ(｀∇´)ψ\",\"image\":\"/images/user.svg\",\"link\":\"/friends/apply.html\"}]; let friendNodes = ''; while (flist.length > 0) { const randID = Math.floor(Math.random()*flist.length); friendNodes += ` ${flist[randID].title} ${flist[randID].description} `; flist.splice(randID, 1); } document.currentScript.parentNode.querySelector(\".kr-linklist-container\").innerHTML = friendNodes; })(); "},{"date":"2024-11-05T12:45:18.189Z","url":"/plugins/comment/gitalk.css","categories":[["undefined",""]],"content":".gt-counts, .gt-header-textarea, .gt-user-name { color: var(--kr-theme-text) !important; } .gt-header-textarea, .gt-header-preview, .gt-btn-preview, .gt-comment-content, .gt-popup { background-color: var(--kr-theme-page-bg) !important; } .gt-popup { border-color: #6190e8 !important; }"},{"date":"2024-11-05T12:45:18.189Z","url":"/plugins/comment/gitalk.js","categories":[["undefined",""]],"content":"(() => { const loadComments = async () => { if (typeof Gitalk === \"undefined\") { setTimeout(loadComments, 100); } else { const container = document.getElementById('gitalk-container'); if (!container) { return; } const path = container.getAttribute(\"data-path\"); const gitalk = new Gitalk(Object.assign({ // id: path, // 直接使用路径作为 id id: container.getAttribute(\"data-path-hash\"), // 使用 hash 作为 ID path: path, }, { clientID: 'Ov23liD0c0DqSJzM8qyG', clientSecret: '6e285d6dd719c6049c42fe927d3fd36388be45fb', repo: \"gitalk\", owner: \"XiaozhiSans\", admin: [\"XiaozhiSans\", \"Xia0zhiSans\"], distractionFreeMode: false, })); gitalk.render('gitalk-container'); } }; window.loadComments = loadComments; window.addEventListener('pjax:success', () => { window.loadComments = loadComments; }); })();"},{"date":"2024-11-05T12:45:18.189Z","url":"/plugins/effects/click.min.js","categories":[["undefined",""]],"content":"/** 这个效果引用自 DIYgod 的 Sagiri 主题，原始文件为 hexo-theme-sagiri/src/cursor-effects.js */ class Circle{constructor({origin:t,speed:i,color:e,angle:s,context:n}){this.origin=t,this.position={...this.origin},this.color=e,this.speed=i,this.angle=s,this.context=n,this.renderCount=0}draw(){this.context.fillStyle=this.color,this.context.beginPath(),this.context.arc(this.position.x,this.position.y,2,0,2*Math.PI),this.context.fill()}move(){this.position.x=Math.sin(this.angle)*this.speed+this.position.x,this.position.y=Math.cos(this.angle)*this.speed+this.position.y+.3*this.renderCount,this.renderCount++}}class Boom{constructor({origin:t,context:i,circleCount:e=10,area:s}){this.origin=t,this.context=i,this.circleCount=e,this.area=s,this.stop=!1,this.circles=[]}randomArray(t){const i=t.length;return t[Math.floor(i*Math.random())]}randomColor(){const t=[\"8\",\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];return\"#\"+this.randomArray(t)+this.randomArray(t)+this.randomArray(t)+this.randomArray(t)+this.randomArray(t)+this.randomArray(t)}randomRange(t,i){return(i-t)*Math.random()+t}init(){for(let t=0;t{if(t.position.x>this.area.width||t.position.y>this.area.height)return this.circles.splice(i,1);t.move()})),0==this.circles.length&&(this.stop=!0)}draw(){this.circles.forEach((t=>t.draw()))}}class CursorSpecialEffects{constructor(){this.computerCanvas=document.createElement(\"canvas\"),this.renderCanvas=document.createElement(\"canvas\"),this.computerContext=this.computerCanvas.getContext(\"2d\"),this.renderContext=this.renderCanvas.getContext(\"2d\"),this.globalWidth=window.innerWidth,this.globalHeight=window.innerHeight,this.booms=[],this.running=!1}handleMouseDown(t){const i=new Boom({origin:{x:t.clientX,y:t.clientY},context:this.computerContext,area:{width:this.globalWidth,height:this.globalHeight}});i.init(),this.booms.push(i),this.running||this.run()}handlePageHide(){this.booms=[],this.running=!1}init(){const t=this.renderCanvas.style;t.position=\"fixed\",t.top=t.left=0,t.zIndex=\"999999999999999999999999999999999999999999\",t.pointerEvents=\"none\",t.width=this.renderCanvas.width=this.computerCanvas.width=this.globalWidth,t.height=this.renderCanvas.height=this.computerCanvas.height=this.globalHeight,document.body.append(this.renderCanvas),window.addEventListener(\"mousedown\",this.handleMouseDown.bind(this)),window.addEventListener(\"pagehide\",this.handlePageHide.bind(this))}run(){if(this.running=!0,0==this.booms.length)return this.running=!1;requestAnimationFrame(this.run.bind(this)),this.computerContext.clearRect(0,0,this.globalWidth,this.globalHeight),this.renderContext.clearRect(0,0,this.globalWidth,this.globalHeight),this.booms.forEach(((t,i)=>{if(t.stop)return this.booms.splice(i,1);t.move(),t.draw()})),this.renderContext.drawImage(this.computerCanvas,0,0,this.globalWidth,this.globalHeight)}}const cursorSpecialEffects=new CursorSpecialEffects;cursorSpecialEffects.init();"},{"date":"2024-11-05T12:45:18.189Z","url":"/plugins/effects/snow.min.js","categories":[["undefined",""]],"content":"/** * 冬季雪花效果 @XiaozhiSans * 修改自原文件  */ (()=>{document.querySelector(\"head\").insertAdjacentHTML(\"beforeend\",\"#snow{position:fixed;top:0;left:0;width:100%;height:100%;z-index:99999;pointer-events:none;background:rgba(225,225,225,.05)}\"),document.body.insertAdjacentHTML(\"beforeend\",'');let e;const t=new Date;e=10===t.getMonth()||11===t.getMonth()||0===t.getMonth();const n=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)};window.requestAnimationFrame=n;const i=document.getElementById(\"snow\"),o=i.getContext(\"2d\");let a=-100,d=-100,s=[];i.width=window.innerWidth,i.height=window.innerHeight;const h=()=>{if(!e)return;o.clearRect(0,0,i.width,i.height);for(let e=0;e{a=e.clientX,d=e.clientY})),window.addEventListener(\"resize\",(()=>{i.width=window.innerWidth,i.height=window.innerHeight})),(()=>{for(let e=0;e"},{"date":"2024-11-05T12:45:18.189Z","url":"/plugins/firacode/README.html","categories":[["undefined",""]],"content":"Fira Code: free monospaced font with programming ligatures ProblemProgrammers use a lot of symbols, often encoded with several characters. For the human brain, sequences like -&gt;, &lt;= or := are single logical tokens, even if they take two or three characters on the screen. Your eye spends a non-zero amount of energy to scan, parse and join multiple characters into a single logical one. Ideally, all programming languages should be designed with full-fledged Unicode symbols for operators, but that’s not the case yet. SolutionFira Code is a free monospaced font containing ligatures for common programming multi-character combinations. This is just a font rendering feature: underlying code remains ASCII-compatible. This helps to read and understand code faster. For some frequent sequences like .. or //, ligatures allow us to correct spacing. Download &amp; Install Then: How to Install Troubleshooting News &amp; Updates Support Fira Code is a personal, free-time project with no funding and a huge feature request backlog. If you love it, consider supporting its development via GitHub Sponsors or Patreon. Any help counts! What’s in the box?Left: ligatures as rendered in Fira Code. Right: same character sequences without ligatures. Fira Code comes with a huge variety of arrows. Even better: you can make them as long as you like and combine start&#x2F;middle&#x2F;end fragments however you want! Fira Code is not only about ligatures. Some fine-tuning is done for punctuation and frequent letter pairs. Fira Code comes with a few different character variants, so that everyone can choose what’s best for them. How to enable Some ligatures can be altered or enabled using stylistic sets&#x2F;character variants: Being a programming font, Fira Code has fantastic support for ASCII&#x2F;box drawing, powerline and other forms of console UIs: Fira Code is the first programming font to offer dedicated glyphs to render progress bars: In action: We hope more programming fonts will adopt this convention and ship their own versions. Unicode coverage makes Fira Code a great choice for mathematical writing: How does it look? Editor compatibility list Works Doesn’t work Abricotine Arduino IDE Android Studio (2.3+, instructions) Adobe Dreamweaver Anjuta (unless at the EOF) Delphi IDE AppCode (2016.2+, instructions) Standalone Emacs (workaround) Atom 1.1 or newer (instructions) Godot (issue) BBEdit&#x2F;TextWrangler (v. 11 only, instructions) IDLE Brackets (with this plugin) KDevelop 4 Chocolat Monkey Studio IDE CLion (2016.2+, instructions) UltraEdit Cloud9 (instructions) Coda 2 CodeLite CodeRunner CotEditor Eclipse elementary Code Geany (1.37+) gEdit &#x2F; Pluma GNOME Builder GoormIDE (instructions) gVim (Windows, GTK) IntelliJ IDEA (2016.2+, instructions) Kate, KWrite KDevelop 5+ Komodo Leafpad LibreOffice LightTable (instructions) LINQPad MacVim 7.4 or newer (instructions) Mancy MATLAB (instructions) Meld Mousepad NeoVim-gtk NetBeans Notepad (Windows) Notepad++ (with a workaround) Notepad3 (instructions) Nova PhpStorm (2016.2+, instructions) PyCharm (2016.2+, instructions) QOwnNotes (21.16.6+) QtCreator Rider RStudio (instructions) RubyMine (2016.2+, instructions) Scratch Scribus (1.5.3+) SublimeText (3146+) Spyder IDE (only with Qt5) SuperCollider 3 TextAdept (Linux, macOS) TextEdit TextMate 2 VimR (instructions) Visual Studio (2015+, instructions) Visual Studio Code (instructions) WebStorm (2016.2+, instructions) Xamarin Studio&#x2F;Monodevelop Xcode (8.0+, otherwise with plugin) Xi Probably work: Smultron, Vico Under question: Code::Blocks IDE Terminal compatibility list Platform Works Doesn’t work macOS Hyper (see #3607)iTerm 2KittyTerminal.appZOC Alacritty Windows Hyper (see #3607)MinttyToken2ShellWindows Terminal AlacrittyCmderConEmuPuTTYWindows ConsoleZOC Linux Hyper (see #3607)KittyKonsoleQTerminalTermuxst (patch) AlacrittyGNOME Terminallibvte-based terminals (bug report): gtktermguakeLXTerminal sakuraTerminatorxfce4-terminalmate-terminalrxvtterminologyxterm ChromeOS crosh (instructions) Browser support IE 10+, Edge Legacy: enable with font-feature-settings: &quot;calt&quot;; Firefox Safari Chromium-based browsers (Chrome, Opera) ACE CodeMirror (enable with font-variant-ligatures: contextual;) Projects using Fira Code CodePen Blink Shell Klipse IlyaBirman.net EvilMartians.com Web Maker FromScratch PEP20.org AlternativesFree monospaced fonts with ligatures: Hasklig Monoid Fixedsys Excelsior Iosevka DejaVu Sans Code Victor Mono Cascadia Code JetBrains Mono Paid monospaced fonts with ligatures: PragmataPro Mono Lisa Building Fira Code locallyIn case you want to alter FiraCode.glyphs and build OTF&#x2F;TTF&#x2F;WOFF files yourself, this is the setup I use on macOS: Alternatively, you can build Fira Code using Docker: Credits Author: Nikita Prokopov @nikitonsky Based on: Fira Mono Inspired by: Hasklig "},{"date":"2024-11-05T12:45:18.209Z","url":"/plugins/firacode/package.json","categories":[["undefined",""]],"content":"{\"name\":\"firacode\",\"version\":\"6.2.0\",\"description\":\"Fira Code: monospaced font with programming ligatures\",\"main\":\"distr/fira_code.css\",\"keywords\":[\"font\",\"Mozilla Fira Type Family\",\"Fira\",\"FiraMono\"],\"repository\":{\"type\":\"git\",\"url\":\"\"},\"author\":\"Nikita Prokopov \",\"license\":\"OFL-1.1\",\"bugs\":{\"url\":\"\"},\"homepage\":\"\",\"files\":[\"distr\"]}"},{"date":"2024-11-05T12:45:18.189Z","url":"/plugins/firacode/distr/fira_code.css","categories":[["undefined",""]],"content":"@font-face { font-family: 'Fira Code'; src: url('woff2/FiraCode-Light.woff2') format('woff2'), url(\"woff/FiraCode-Light.woff\") format(\"woff\"); font-weight: 300; font-style: normal; } @font-face { font-family: 'Fira Code'; src: url('woff2/FiraCode-Regular.woff2') format('woff2'), url(\"woff/FiraCode-Regular.woff\") format(\"woff\"); font-weight: 400; font-style: normal; } @font-face { font-family: 'Fira Code'; src: url('woff2/FiraCode-Medium.woff2') format('woff2'), url(\"woff/FiraCode-Medium.woff\") format(\"woff\"); font-weight: 500; font-style: normal; } @font-face { font-family: 'Fira Code'; src: url('woff2/FiraCode-SemiBold.woff2') format('woff2'), url(\"woff/FiraCode-SemiBold.woff\") format(\"woff\"); font-weight: 600; font-style: normal; } @font-face { font-family: 'Fira Code'; src: url('woff2/FiraCode-Bold.woff2') format('woff2'), url(\"woff/FiraCode-Bold.woff\") format(\"woff\"); font-weight: 700; font-style: normal; } @font-face { font-family: 'Fira Code VF'; src: url('woff2/FiraCode-VF.woff2') format('woff2-variations'), url('woff/FiraCode-VF.woff') format('woff-variations'); /* font-weight requires a range:  */ font-weight: 300 700; font-style: normal; }"},{"date":"2024-11-05T12:45:18.189Z","url":"/plugins/firacode/distr/specimen.html","categories":[["undefined",""]],"content":" Fira Code Specimen body { font: 14px/1.5em \"Fira Code\"; } .code { font-feature-settings: \"calt\" 1; /* Enable ligatures for IE 10+, Edge */ text-rendering: optimizeLegibility; /* Force ligatures for Webkit, Blink, Gecko */ width: 30em; margin: 5em auto; white-space: pre-wrap; word-break: break-all; } .light { font-weight: 300; } .regular { font-weight: 400; } .medium { font-weight: 500; } .semibold { font-weight: 600; } .bold { font-weight: 700; } .variable { font-family: 'Fira Code VF'; font-variation-settings: 'wght' 400; } i { font-style: normal; color: #c33; } b { font-weight: inherit; color: #c33; } function onWeightChange(weight) { // code_variable.style['font-weight'] = weight; code_variable.style['font-variation-settings'] = \"'wght' \" + weight; span_wght.innerText = weight; } # Fira Code Light take = (n, [x, ...xs]:list) --&gt; | n &lt;= 0 =&gt; [] | empty list =&gt; [] | otherwise =&gt; [x] ++ take n-1, xs last3 = reverse &gt;&gt; take 3 &gt;&gt; reverse # Fira Code Regular take = (n, [x, ...xs]:list) --> | n &lt;= 0 =&gt; [] | empty list =&gt; [] | otherwise =&gt; [x] ++ take n-1, xs last3 = reverse &gt;&gt; take 3 &gt;&gt; reverse # Fira Code Medium take = (n, [x, ...xs]:list) --&gt; | n &lt;= 0 =&gt; [] | empty list =&gt; [] | otherwise =&gt; [x] ++ take n-1, xs last3 = reverse &gt;&gt; take 3 &gt;&gt; reverse # Fira Code SemiBold take = (n, [x, ...xs]:list) --&gt; | n &lt;= 0 =&gt; [] | empty list =&gt; [] | otherwise =&gt; [x] ++ take n-1, xs last3 = reverse &gt;&gt; take 3 &gt;&gt; reverse # Fira Code Bold take = (n, [x, ...xs]:list) --&gt; | n &lt;= 0 =&gt; [] | empty list =&gt; [] | otherwise =&gt; [x] ++ take n-1, xs last3 = reverse &gt;&gt; take 3 &gt;&gt; reverse # Fira Code Variable 400 take = (n, [x, ...xs]:list) --&gt; | n &lt;= 0 =&gt; [] | empty list =&gt; [] | otherwise =&gt; [x] ++ take n-1, xs last3 = reverse &gt;&gt; take 3 &gt;&gt; reverse"}]